# .github/workflows/sync_translations_from_sheet.yml
name: Sync Translations from Google Sheet

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  sync-sheet:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Google API Client and CSV writer
        run: npm install googleapis csv-stringify # これらが package.json にあれば npm ci でも可

      - name: Create script to fetch and save CSV
        run: |
          cat << 'EOF' > ./fetch-sheet-as-csv.mjs
          import { google } from 'googleapis';
          import fs from 'fs/promises';
          import { stringify } from 'csv-stringify/sync';

          const SPREADSHEET_ID = process.env.SPREADSHEET_ID;
          const SHEET_NAME = process.env.SHEET_NAME;
          const GCP_SA_KEY_JSON_STRING = process.env.GCP_SA_KEY; // ★ 環境変数名を GCP_SA_KEY に変更
          const OUTPUT_CSV_PATH = './translations.csv';

          async function main() {
            console.log('--- Fetching Google Sheet data ---');
            if (!SPREADSHEET_ID || !SHEET_NAME || !GCP_SA_KEY_JSON_STRING) {
              console.error('Missing required environment variables: SPREADSHEET_ID, SHEET_NAME, GCP_SA_KEY'); // ★ メッセージ修正
              process.exit(1);
            }

            let keys;
            try {
              keys = JSON.parse(GCP_SA_KEY_JSON_STRING); // ★ Base64デコードなしで直接パース
            } catch (e) {
              console.error('Failed to parse GCP_SA_KEY JSON string. Ensure the secret contains valid JSON.', e);
              // デバッグ用に最初の数文字を出力（本番では注意）
              if (GCP_SA_KEY_JSON_STRING) {
                console.log('GCP_SA_KEY (first 50 chars):', GCP_SA_KEY_JSON_STRING.substring(0, 50));
              }
              process.exit(1);
            }

            const auth = new google.auth.GoogleAuth({
              credentials: keys,
              scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],
            });

            const sheets = google.sheets({ version: 'v4', auth });

            try {
              console.log(`Fetching data from Spreadsheet ID: ${SPREADSHEET_ID}, Sheet: ${SHEET_NAME}`);
              const response = await sheets.spreadsheets.values.get({
                spreadsheetId: SPREADSHEET_ID,
                range: `${SHEET_NAME}!A1:Z`, // 十分な範囲を指定
              });

              const rows = response.data.values;
              if (!rows || rows.length === 0) {
                console.log('No data found in the sheet. Writing empty CSV.');
                await fs.writeFile(OUTPUT_CSV_PATH, '');
                return;
              }

              const csvString = stringify(rows);
              await fs.writeFile(OUTPUT_CSV_PATH, csvString);
              console.log(`CSV data successfully fetched and saved to ${OUTPUT_CSV_PATH}`);

            } catch (err) {
              console.error('Error fetching or processing sheet data:', err);
              process.exit(1);
            }
          }

          main();
          EOF

      - name: Fetch data from Google Sheet and save as CSV
        env:
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
          SHEET_NAME: ${{ secrets.SHEET_NAME }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }} # ★ 環境変数名を GCP_SA_KEY に統一
        run: node ./fetch-sheet-as-csv.mjs # ★ run ブロック内の余計な echo やコメントを削除

      - name: Commit and push if CSV changed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add translations.csv
          if ! git diff --staged --quiet; then
            git commit -m "Chore: Update translations.csv from Google Sheet"
            git push
          else
            echo "No changes to translations.csv"
          fi
